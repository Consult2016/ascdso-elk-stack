---

- hosts: all
  become: true


  vars:
    elastic_version: 5.1.1
    elastic_download: https://artifacts.elastic.co


  tasks:

  - name: Get the platform (i386 or amd64) of the virtual machine
    command: dpkg --print-architecture
    register: print_architecture

  - name: And set the actual platform value as a variable
    set_fact:
      platform: "{{ print_architecture.stdout }}"


  - name: Get rid of Chef and Puppet to save some resources and autoremove unused packages to save some disk space
    apt: name={{ item }} state=absent autoremove=yes
    with_items:
      - chef
      - puppet

  - name: Install unzip for unpacking files later on
    apt: name=unzip state=latest

  - name: Install Vim, because plain Vi is driving me crazy
    apt: name=vim state=latest

  - name: Install cURL, which is missing on the Bento image
    apt: name=curl state=latest

  - name: Install NTP to avoid time drift inside the VM
    apt: name=ntp state=latest

  - name: Install the JRE
    apt: name=openjdk-8-jre-headless state=latest update_cache=yes install_recommends=no


  - name: Install Redis, nginx, and MongoDB so we have a queue and services in action
    apt: name={{ item }} state=latest
    with_items:
      - redis-server
      - redis-tools
      - nginx
      - mongodb

  - name: Make sure Redis server, nginx, and MongoDB autostart and are started
    service: name={{ item }} enabled=yes state=started
    with_items:
      - redis-server
      - nginx
      - mongodb


  - name: Install pip to get current Python dependencies
    apt: name=python-pip state=latest

  - name: Install pexpect to handle interactive prompts in X-Pack
    pip: name=pexpect state=latest


  - name: Get Elasticsearch
    get_url:
      url={{ elastic_download }}/downloads/elasticsearch/elasticsearch-{{ elastic_version }}.deb
      dest=/opt/elasticsearch.deb

  - name: Install Elasticsearch
    apt: deb=/opt/elasticsearch.deb

  - name: Make sure Elasticsearch autostarts, but is stopped until it is properly configured
    service: name=elasticsearch enabled=yes state=stopped


  - name: Get Logstash
    get_url:
      url={{ elastic_download }}/downloads/logstash/logstash-{{ elastic_version }}.deb
      dest=/opt/logstash.deb

  - name: Install Logstash
    apt: deb=/opt/logstash.deb

  - name: Make sure Logstash autostarts, but is stopped until it is properly configured
    service: name=logstash enabled=yes state=stopped


  - name: Get Filebeat
    get_url:
      url={{ elastic_download }}/downloads/beats/filebeat/filebeat-{{ elastic_version }}-{{ platform }}.deb
      dest=/opt/filebeat.deb

  - name: Install Filebeat
    apt: deb=/opt/filebeat.deb

  - name: Get Metricbeat
    get_url:
      url={{ elastic_download }}/downloads/beats/metricbeat/metricbeat-{{ elastic_version }}-{{ platform }}.deb
      dest=/opt/metricbeat.deb

  - name: Install Metricbeat
    apt: deb=/opt/metricbeat.deb

  - name: Get Packetbeat
    get_url:
      url={{ elastic_download }}/downloads/beats/packetbeat/packetbeat-{{ elastic_version }}-{{ platform }}.deb
      dest=/opt/packetbeat.deb

  - name: Install Packetbeat
    apt: deb=/opt/packetbeat.deb

  - name: Make sure Filebeat, Metricbeat, and Packetbeat autostart, but are stopped until they are properly configured
    service: name={{ item }} enabled=yes state=stopped
    with_items:
      - filebeat
      - metricbeat
      - packetbeat


  - name: Get Kibana
    get_url:
      url={{ elastic_download }}/downloads/kibana/kibana-{{ elastic_version }}-{{ platform }}.deb
      dest=/opt/kibana.deb

  - name: Install Kibana
    apt: deb=/opt/kibana.deb

  - name: Make sure Kibana autostarts, but is stopped until it is properly configured
    service: name=kibana enabled=yes state=stopped


  - name: Download X-Pack
    get_url:
      url={{ elastic_download }}/downloads/packs/x-pack/x-pack-{{ elastic_version }}.zip
      dest=/opt/x-pack.zip


  - name: Make the shell scripts executable
    file: path=/elastic-stack/{{ item }} mode=0755
    with_items:
      - all.sh
      - fix-time.sh


  - name: Get the injector plugin to generate test data
    get_url:
      url=https://download.elastic.co/workshops/basic-kibana/injector/injector-5.0.jar
      dest=/opt/injector-5.0.jar
      mode=0755
